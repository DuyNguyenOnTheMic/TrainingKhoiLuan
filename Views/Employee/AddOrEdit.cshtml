@model TrainingKhoiLuan.Models.employee
@{
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Employee", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.employee_id);
    <div class="form-group">
        @Html.LabelFor(model => model.employee_name, new { @class = "control-label" })
        @Html.EditorFor(model => model.employee_name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.employee_name, "", new { @class= "text-danger"})
      
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.birth_date, new { @class = "control-label" })
        @Html.EditorFor(model => model.birth_date, "{0:yyyy-MM-dd", new { htmlAttributes = new { @class = "form-control", @type = "date" } })
        @Html.ValidationMessageFor(model => model.birth_date, "", new { @class = "text-danger" })

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.birth_place, new { @class = "control-label" })
        @Html.EditorFor(model => model.birth_place, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.birth_place, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.age, new { @class = "control-label" })
        @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-primary" />
        <input type="reset" value="Reset" class="btn" />
    </div>
}